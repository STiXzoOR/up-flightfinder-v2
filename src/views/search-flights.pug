extends layout
include mixins/_preloader
include mixins/_go-up
include mixins/_flight-card

block title
	title Search flights - Flight Finder

block content
	main.bg-gray(role='main')
		.container.py-5
			#changeFlightSearch.card.search-flights-card.mb-5
				.card-collapse.bg-dark
					h5.mb-0
						button.btn.btn-link.btn-block.card-btn.text-white.p-3(
							type='button',
							data-toggle='collapse',
							data-target='#modifyFlightSearch',
							aria-expanded='false',
							aria-controls='modifyFlightSearch'
						)
							.search-route
								.route.font-size-22.font-weight-medium
									span #{airports.find(obj => obj.code === query.from).city}
									span.fas.fa-plane.fa-fw.mx-2
									span #{airports.find(obj => obj.code === query.to).city}
								ul.flex-vertical-center.flex-wrap.font-size-16.font-weight-normal.text-left.text-muted.mt-1
									li.border-right.border-gray-3.pr-2 #{new Date(query.isRoundtrip? query.dates.from: query.dates).toLocaleDateString('en-gb', {weekday: 'short', month: 'short', day: 'numeric'})}
									li.pl-2 #{query.passengers.total} #{query.passengers.total > 1 ? 'Passengers' : 'Passenger'}
							span.card-btn-caret
								i.fas.fa-chevron-down.text-white
				#modifyFlightSearch.collapse(data-parent='#changeFlightSearch')
					.card-body
						ul.nav.nav-pills.nav-justified.nav-sm-unjustified.mb-4
							li.nav-item
								a#navRoundtripPillTab.nav-link(
									class=query.isRoundtrip ? "active" : "",
									data-toggle='tab',
									href='#navRoundtripSearch',
									role='tab',
									aria-controls='navRoundtripSearch',
									aria-selected=`${query.isRoundtrip ? true : false}`
								) Round Trip
							li.nav-item
								a#navOnewayPillTab.nav-link(
									class=!query.isRoundtrip ? "active" : "",
									data-toggle='tab',
									href='#navRoundtripSearch',
									role='tab',
									aria-controls='navRoundtripSearch',
									aria-selected=`${!query.isRoundtrip ? true : false}`
								) One Way
						#navTabsContent.tab-content
							#navRoundtripSearch.tab-pane.show.fade.active(role='tabpanel')
								form#flightSearchForm.needs-validation(action='/flight/search-flights', novalidate)
									input(type='hidden', name='type', value=`${query.type}`, required='')
									.form-row
										.form-group.col-12.col-lg-5.mb-3.mb-lg-0
											.form-row.justify-content-center
												.col-sm-6.custom-select2.half-left.mb-3.mb-sm-0
													span.text-muted From
													select#fromAirport.select2-input.form-control.custom-select(
														name='fromAirport',
														data-placeholder='City or airport',
														data-format-result='formatAirports',
														data-format-selection='formatAirports',
														required=''
													)
														option(selected='', disabled='', hidden='')
														each airport in airports
															if airport.code === query.from
																option(value=`${airport.code}`, selected) #{airport.city} (#{airport.code})
															else if airport.code === query.to
																option(value=`${airport.code}`, disabled) #{airport.city} (#{airport.code})
															else
																option(value=`${airport.code}`) #{airport.city} (#{airport.code})
													.invalid-feedback Source is required.
												.btn-reverse-destinations-wrapper.d-none.d-sm-flex
													a.btn.btn-icon.btn-reverse-destinations(href='#!', role='button')
														i.fas.fa-exchange-alt.fa-fw
												.col-sm-6.custom-select2.half-right
													span.text-muted To
													select#toAirport.select2-input.form-control.custom-select(
														name='toAirport',
														data-placeholder='City or airport',
														data-format-result='formatAirports',
														data-format-selection='formatAirports',
														required=''
													)
														option(selected='', disabled='', hidden='')
														each airport in airports
															if airport.code === query.to
																option(value=`${airport.code}`, selected) #{airport.city} (#{airport.code})
															else if airport.code === query.from
																option(value=`${airport.code}`, disabled) #{airport.city} (#{airport.code})
															else
																option(value=`${airport.code}`) #{airport.city} (#{airport.code})
													.invalid-feedback Dedtination is required.
										.form-group.col-sm-6.col-lg-3.mb-3.mb-lg-0
											span.text-muted Depart - Return
											.custom-datepicker
												input#departReturnDatepicker.form-control.text-truncate.flatpickr-input(
													type='date',
													name='flightDates',
													data-mode=`${query.isRoundtrip ? "range" : "single"}`,
													data-min-date='today',
													data-alt-format='D, j M',
													data-date-format='Y-m-d',
													data-default-selected-dates=`${query.dates instanceof Object ? JSON.stringify(Object.values(query.dates)) : query.dates}`,
													data-month-selector-type='static',
													data-year-selector-type='static',
													required=''
												)
												.invalid-feedback Flight dates are required.
										.form-group.col-sm-6.col-lg-3.mb-3.mb-lg-0
											span.text-muted Passengers &amp; class
											.dropdown
												input#passengersClassInput.form-control.d-none(
													type='text',
													name='passengersClass',
													value=`{"passengers": ${JSON.stringify(query.passengers)}, "class": ${JSON.stringify(query.class)}}`,
													required=''
												)
												.dropdown-input.form-control.dropdown-toggle(
													role='button',
													data-toggle='dropdown',
													data-display='static',
													aria-haspopup='true',
													aria-expanded='false'
												)
													- var passengers = ""
													if query.passengers.adults > 0 && (query.passengers.children > 0 || query.passengers.infants > 0)
														- passengers = "Passengers"
													else if query.passengers.adults > 1
														- passengers = "Adults"
													else
														- passengers = "Adult"
													span#passengerClassResult #{query.passengers.total} #{passengers}, #{query.class}
												.invalid-feedback Passengers and class are required.
												.dropdown-menu.keep-open(aria-labelledby='dropdownMenuLink')
													.passengers-wrapper
														h6.font-size-18 Passengers
														ul.passengers-list
															li.passengers-counter
																label Adults
																#adultCounter.counter-controls
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='minus'
																	)
																		i.fas.fa-minus.fa-fw.fa-sm
																	span.counter-num #{query.passengers.adults}
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='plus'
																	)
																		i.fas.fa-plus.fa-fw.fa-sm
															li.passengers-counter
																label Children
																#childrenCounter.counter-controls
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='minus'
																	)
																		i.fas.fa-minus.fa-fw.fa-sm
																	span.counter-num #{query.passengers.children}
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='plus'
																	)
																		i.fas.fa-plus.fa-fw.fa-sm
															li.passengers-counter
																label Infants
																#infantCounter.counter-controls
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='minus'
																	)
																		i.fas.fa-minus.fa-fw.fa-sm
																	span.counter-num #{query.passengers.infants}
																	a.btn.btn-icon.btn-sm.btn-outline-secondary.rounded-circle(
																		href='#!',
																		role='button',
																		data-counter-btn-type='plus'
																	)
																		i.fas.fa-plus.fa-fw.fa-sm
													.dropdown-divider
													.cabin-class-wrapper
														h6.font-size-18 Class
														ul.class-list
															each klass in ['Economy', 'Business', 'First']
																li.class-list-item(class=`${klass === query.class ? "selected" : ""}`) #{klass}
										.form-group.col-lg-1.mt-lg-4.mb-3.mb-sm-0
											button#flightSearch.btn.btn-primary.btn-block(type='submit')
												i.fas.fa-search.fa-fw.mr-1.mr-lg-0
												span.d-inline-block.d-lg-none.font-weight-bold SEARCH FLIGHTS
			+preLoaderImage('gray')#preLoaderFlights.position-relative.bg-gray.py-10.py-sm-15
			if !flights.results
				.p-5(style='display: none;')
					h5.font-size-24
						.flex-center.flex-column
							i.far.fa-sad-tear.fa-fw.font-size-55.mb-3
							span Sorry, we couldn&apos;t find any flights for these dates.
			else
				.row.justify-content-center(style='display: none;')
					.col-lg-4.col-xl-3.mt-lg-1
						.d-none.d-lg-block.bg-dark.text-white.border.border-bottom-0.rounded-top-5.shadow-soft.px-3.py-2
							h4.text-lg-center.font-size-22.font-weight-bold.mb-0 FILTERS
						a.d-lg-none.btn.btn-white.btn-floating(
							href='#filterList',
							aria-controls='filterList',
							aria-expanded='false',
							aria-label='Toggle Filters',
							data-breakpoint='lg',
							data-toggle='navdrawer',
							data-type='permanent'
						)
							i.fas.fa-sliders-h.fa-fw.fa-rotate-90.mr-2
							| Filters
						#filterList.navdrawer.navdrawer-permanent-lg.position-lg-relative.border-lg.border-lg-top-0.rounded-lg-bottom-5.w-lg-100.shadow-soft
							.navdrawer-content.position-lg-relative
								#stopsFilter.accordion.rounded-0
									.card-collapse
										h3.mb-0
											button.btn.btn-link.btn-block.card-btn.btn-section.px-xl-4.collapsed(
												type='button',
												data-toggle='collapse',
												data-target='#stopsFilterSection',
												aria-expanded='true',
												aria-controls='stopsFilterSection'
											)
												span.section-header Stops
												span.card-btn-caret
													i.fas.fa-chevron-down.text-dark
									#stopsFilterSection.collapse.show(aria-labelledby='Stops filter section', data-parent='#stopsFilter')
										.card-body.pt-0.mt-2.px-5.px-xl-4.pb-4
											ul.text-gray-1
												li.mb-3
													.custom-control.custom-checkbox
														input#nonStop.custom-control-input(type='checkbox', checked='')
														label.custom-control-label(for='nonStop') Non Stop
												li.mb-3
													.custom-control.custom-checkbox
														input#oneStop.custom-control-input(type='checkbox', disabled)
														label.custom-control-label(for='oneStop') 1 Stop
												li.mb-3
													.custom-control.custom-checkbox
														input#twoStops.custom-control-input(type='checkbox', disabled)
														label.custom-control-label(for='twoStops') 2 Stop
												li.mb-1
													.custom-control.custom-checkbox
														input#threeStops.custom-control-input(type='checkbox', disabled)
														label.custom-control-label(for='threeStops') 3 Stop
								#priceFilter.accordion.rounded-0.border-top
									.card-collapse
										h3.mb-0
											button.btn.btn-link.btn-block.card-btn.btn-section.px-xl-4.collapsed(
												type='button',
												data-toggle='collapse',
												data-target='#priceFilterSection',
												aria-expanded='true',
												aria-controls='priceFilterSection'
											)
												span.section-header Price Range
												span.card-btn-caret
													i.fas.fa-chevron-down.text-dark
									#priceFilterSection.collapse.show(aria-labelledby='Price filter section', data-parent='#priceFilter')
										.card-body.pt-0.mt-2.px-5.px-xl-4.pb-4
											input#priceRange.ion-range-slider-input(
												type='text',
												data-extra-classes='irs-with-indicator mx-2',
												data-type='double',
												data-grid='false',
												data-hide-min-max='true',
												data-hide-from-to='false',
												data-min=`${flights.results[0].totalPrice}`,
												data-max=`${flights.results[flights.results.length - 1].totalPrice}`,
												data-from=`${flights.results[0].totalPrice + 30}`,
												data-to=`${flights.results[flights.results.length - 1].totalPrice - 30}`,
												data-prefix='€'
											)
								#timeFilter.accordion.rounded-0.border-top
									.card-collapse
										h3.mb-0
											button.btn.btn-link.btn-block.card-btn.btn-section.px-xl-4.collapsed(
												type='button',
												data-toggle='collapse',
												data-target='#timeFilterSection',
												aria-expanded='true',
												aria-controls='timeFilterSection'
											)
												span.section-header Time Range
												span.card-btn-caret
													i.fas.fa-chevron-down.text-dark
									#timeFilterSection.collapse.show(aria-labelledby='Time filter section', data-parent='#timeFilter')
										.card-body.pt-0.mt-2.px-5.px-xl-4.pb-4
											div
												label.section-subtitle.font-size-15.mb-2(for='departureTimeRange') Departure Time
												input#departureTimeRange.ion-range-slider-input(
													type='text',
													data-extra-classes='irs-with-indicator mx-2',
													data-type='double',
													data-grid='false',
													data-hide-min-max='true',
													data-hide-from-to='false'
												)
											if query.isRoundtrip
												hr
												div
													label.section-subtitle.font-size-15.mb-2(for='returnTimeRange') Return Time
													input#returnTimeRange.ion-range-slider-input(
														type='text',
														data-extra-classes='irs-with-indicator mx-2',
														data-type='double',
														data-grid='false',
														data-hide-min-max='true',
														data-hide-from-to='false'
													)
								#airlinesFilter.accordion.rounded-0.border-top
									.card-collapse
										h3.mb-0
											button.btn.btn-link.btn-block.card-btn.btn-section.px-xl-4.collapsed(
												type='button',
												data-toggle='collapse',
												data-target='#airlinesFilterSection',
												aria-expanded='true',
												aria-controls='airlinesFilterSection'
											)
												span.section-header Airlines
												span.card-btn-caret
													i.fas.fa-chevron-down.text-dark
									#airlinesFilterSection.collapse.show(aria-labelledby='Airlines filter section', data-parent='#airlinesFilter')
										.card-body.pt-0.mt-2.px-5.px-xl-4.pb-4
											ul.text-gray-1
												- var lastIndex = 0
												each airline, index in airlines
													if index > 4
														- lastIndex = index
														- break
													- var airlineID = `${airline.name.split(" ")[0].toLowerCase()}Air`
													li.flex-center-between.mb-3
														.custom-control.custom-checkbox
															input.custom-control-input(id=airlineID, type='checkbox', checked='')
															label.custom-control-label(for=airlineID) #{airline.name}
														span.font-size-15 #{airline.total}

												if airlines.length > 5
													#moreAirlines.collapse
														ul.text-gray-1
															while lastIndex < airlines.length
																- var airlineID = `${airlines[lastIndex].name.split(" ")[0].toLowerCase()}Air`
																li.flex-center-between.mb-3
																	.custom-control.custom-checkbox
																		input.custom-control-input(id=airlineID, type='checkbox', checked='')
																		label.custom-control-label(for=airlineID) #{airlines[lastIndex].name}
																	span.font-size-15 #{airlines[lastIndex].total}
																- lastIndex += 1
													a.btn.btn-link.link-collapse(
														data-toggle='collapse',
														href='#moreAirlines',
														role='button',
														aria-expanded='false',
														aria-controls='moreAirlines'
													)
														span.link-collapse-default.font-size-14 Show all
														span.link-collapse-active.font-size-14 Show less
					.col-lg-8.col-xl-9.mt-lg-1
						.row.align-items-center.justify-content-between.mb-5
							.col
								p.mb-0 #{flights.total} Results
							.col.col-md-5.col-xl-4.flex-vertical-center
								p.d-none.d-sm-block.text-nowrap.mb-0.mr-2 Sort by
								.custom-select2.w-100
									select#sortFlightsBy.select2-input.form-control-sm.custom-select.rounded.w-100(
										name='sortBy',
										data-minimum-results-for-search='Infinity'
									)
										option(value='lowest', selected='') Lowest price
										option(value='fastest') Fastest
										option(value='departTime') Departure time
										if query.isRoundtrip
											option(value='returnTime') Return time
						.flights-container
							each flight, index in flights.results
								+flightCard(index, query, flight)
		+goUpButton

block append scripts
	if flights.results
		- var minDepartTime = (maxDepartTime = new Date(`1970-01-01 ${flights.results[0].departTime}`))

		if query.isRoundtrip
			- var minReturnTime = (maxReturnTime = new Date(`1970-01-01 ${flights.results[0].returnTime}`))

		each flight in flights.results
			- var time = new Date(`1970-01-01 ${flight.departTime}`)
			- minDepartTime = time < minDepartTime ? time : minDepartTime
			- maxDepartTime = time > maxDepartTime ? time : maxDepartTime

			if query.isRoundtrip
				- time = new Date(`1970-01-01 ${flight.returnTime}`)
				- minReturnTime = time < minReturnTime ? time : minReturnTime
				- maxReturnTime = time > maxReturnTime ? time : maxReturnTime

		if query.isRoundtrip
			script.
				$(() => {
					$('#returnTimeRange').data('ionRangeSlider').update({
						min: #{minReturnTime.valueOf()},
						max: #{maxReturnTime.valueOf()},
						from: #{minReturnTime.valueOf()},
						to: #{maxReturnTime.valueOf()},
						step: 1800000,
						prettify: (timestamp) =>
							new Date(timestamp).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', hour12: false }),
					});
				})
				
		script.
			$(() => {
				$('#departureTimeRange').data('ionRangeSlider').update({
					min: #{minDepartTime.valueOf()},
					max: #{maxDepartTime.valueOf()},
					from: #{minDepartTime.valueOf()},
					to: #{maxDepartTime.valueOf()},
					step: 1800000,
					prettify: (timestamp) =>
						new Date(timestamp).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', hour12: false }),
				});
			});
	if flights.results
		script.
			function initLoadMoreFlights() {
				$(".flights-container").simpleLoadMore({
					item: ".flight-card",
					count: 5,
					cssClass: 'load-more-flights',
					btnHTML: '<div class="text-center"><a href="#" class="btn btn-sm btn-primary load-more-flights__btn" data-load-next="5">Load more</a></div>'
				});
			}
			
			function resetLoadMoreFlights() {
				let items = $(".flights-container").find('.load-more-flights__item')
				items = items.filter(':hidden');
			
				items.show()
				$('.load-more-flights__btn').parent().remove();
			}
			
			function setNext(el) {
				const nextID = $('.load-more-flights__item:hidden').length
					? $('.load-more-flights__item:hidden').first().closest('[id^="flight-"]').attr('id').replace('flight-', '')
					: '';
				
				$(el).data('load-next', nextID).attr('data-load-next', nextID);
			}
			
			$('#sortFlightsBy').on('change', function sort() {
				let preloader = $('#preLoaderSorting');
			
				if(!preloader.length) {
					preloader = $('#preLoaderFlights')
						.clone()
						.attr('id', 'preLoaderSorting')
						.removeClass()
						.addClass('page-preloader-image h-lg-100 py-10 py-sm-15');
			
					preloader.insertAfter('.flights-container');
				}
				
				const value = $(this).val();
				let attr = '';
			
				switch (value) {
					case 'lowest':
						attr = 'price';
						break;
					case 'fastest':
						attr = 'duration';
						break;
					case 'departTime':
						attr = 'depart-time';
						break;
					case 'returnTime':
						attr = 'return-time';
						break;
					default:
				}
			
				$('.flights-container').fadeOut(400, () => {
					preloader.fadeIn();
			
					resetLoadMoreFlights();
					
					tinysort('[id^="flight-"]', {
						data: attr,
					});
			
					initLoadMoreFlights();
			
					setTimeout(() => {
						preloader.hide();
						$('.flights-container').fadeIn(() => {
							if ($('.load-more-flights__btn').length) {
								setNext('.load-more-flights__btn');
							}
						});
					}, 1000)
				});
			});
			
			// TODO: Make it universal
			$(document).on('click', '.load-more-flights__btn', function scroll() {
				const ID = parseInt($(this).data('load-next'), 10);
				setNext(this);
			
				setTimeout(() => {
					const next = $(`#flight-${ID}`);
			
					const header = $('.page-header');
					const headerStyles = getComputedStyle(header.get(0));
					const headerPosition = headerStyles.position;
					let offset = next.offset().top;
			
					if (header.length && headerPosition === 'fixed' && parseInt(headerStyles.top, 10) === 0) {
					offset -= header.outerHeight() - parseInt(headerStyles.marginTop, 10);
					}
			
					$('html').scrollTop(offset - 30);
				}, 100);
			});
			
			initLoadMoreFlights()
			
	script.
		$(() => {
			setTimeout(() => {
				$('#preLoaderFlights').fadeOut(500, () => {
					$('#preLoaderFlights').next().fadeIn(500)
				})
			}, 3000);
		})
